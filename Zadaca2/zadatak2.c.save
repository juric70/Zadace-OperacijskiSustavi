                }
                izadji_iz_kriticnog_odsjecka(i,j);
        }
}
void main(){
        pravoId = shmget(IPC_PRIVATE, sizeof(int), IPC_CREAT | 0660);
        zastavicvaId = shmget(IPC_PRIVATE, sizeof(int) * 2, IPC_CREAT | 0660);
        PRAVO = (int*)shmat(pravoId, NULL, 0);
        ZASTAVICA = (int*)shmat(zastavicaId, NULL, 0);


        if(fork() == 0){
                proc(1,0);
        }
        else{
                proc(0,1);
                wait(NULL);
        }
}#include <stdio.h>
int *PRAVO, *ZASTAVICA, pravoId, zastavicaId;
void udi_u_kriticni_odsjecak(int i, int j){
	ZASTAVICA[i] = 1;
	while(ZASTAVICA[j] != 0){
		if(*PRAVO == j){
			ZASTAVICA[i]=0;
			while(*PRAVO == j){
				//udji u ko i uradi nesto :)
			}
			ZASTAVICA[i]=1;
		}
	}
}
void izadji_iz_kriticnog_odsjecka(int i, int j){
	*PRAVO = j;
	ZASTAVICA[i] = 0;
}
void proc(int i, int j){
int k, m;
	for(k=1; k<5; k++){
		udi_u_kriticni_odsjecak(i,j);
		for(m = 1; m<5; m++){
		printf("\ni = %d, k = %d, m = %d\n", i,k,m);
		sleep(1);
		}
		izadji_iz_kriticnog_odsjecka(i,j);
	}
}
void main(){
	pravoId = shmget(IPC_PRIVATE, sizeof(int), IPC_CREAT | 0660);
	zastavicvaId = shmget(IPC_PRIVATE, sizeof(int) * 2, IPC_CREAT | 0660);
	PRAVO = (int*)shmat(pravoId, NULL, 0);
	ZASTAVICA = (int*)shmat(zastavicaId, NULL, 0);


	if(fork() == 0){
		proc(1,0);
	}
	else{
		proc(0,1);
		wait(NULL);
	}
}
